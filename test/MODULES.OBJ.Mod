(***************************************************************************

   Input File:   MODULES.OBJ
   Date/Time:    Tue Jan 12 23:04:47 2021
   -------------------------------------------------------

   Generated by Slim Binary(tm) Decoder Version 2.04

 ***************************************************************************)

MODULE Modules;    (* x86 binary *)

  IMPORT
    Kernel, Files;

  CONST
    ModNameLen* = 32;

  TYPE
    ARRAY4B = ARRAY 256 OF CHAR;
    ModuleName* = ARRAY 32 OF CHAR;
    ARRAYD6 = ARRAY OF LONGINT;
    POINTERD5 = POINTER TO ARRAYD6;
    CommandName = ARRAY 32 OF CHAR;
    Cmd* = RECORD
      name: CommandName;
      adr*: LONGINT;
    END;
    ARRAYE2 = ARRAY OF Cmd;
    POINTERE1 = POINTER TO ARRAYE2;
    ARRAY107 = ARRAY OF LONGINT;
    POINTER106 = POINTER TO ARRAY107;
    ARRAY112 = ARRAY OF LONGINT;
    POINTER111 = POINTER TO ARRAY112;
    ARRAY11D = ARRAY OF LONGINT;
    POINTER11C = POINTER TO ARRAY11D;
    ARRAY129 = ARRAY OF CHAR;
    POINTER128 = POINTER TO ARRAY129;
    ARRAY137 = ARRAY OF CHAR;
    POINTER136 = POINTER TO ARRAY137;
    ARRAY158 = ARRAY OF LONGINT;
    ArrayPtr* = POINTER TO ARRAY158;
    POINTER1A1 = POINTER TO ARRAY1A2;
    ExportDesc* = RECORD
      fp*: LONGINT;
      adr*: LONGINT;
      nofExp*: INTEGER;
      dsc*: POINTER1A1;
    END;
    ARRAY1A2 = ARRAY OF ExportDesc;
    Module* = POINTER TO ModDesc;
    ModDesc* = RECORD
      link*: Module;
      name*: ModuleName;
      init*: BOOLEAN;
      refcnt*: LONGINT;
      sb*: LONGINT;
      dataSize*: LONGINT;
      conSize*: LONGINT;
      codeSize*: LONGINT;
      refSize*: LONGINT;
      nofEntries*: LONGINT;
      nofCmds*: LONGINT;
      nofImps*: LONGINT;
      nofTds*: LONGINT;
      nofPtrs*: LONGINT;
      entries*: POINTERD5;
      cmds*: POINTERE1;
      ptrTab*: POINTER106;
      tdescs*: POINTER111;
      imports*: POINTER11C;
      data*: POINTER128;
      code*: POINTER128;
      refs*: POINTER136;
      publics*: LONGINT;
      privates*: LONGINT;
      nofimp*: INTEGER;
      import*: ArrayPtr;
      nofstrc*: INTEGER;
      struct*: ArrayPtr;
      nofreimp*: INTEGER;
      reimp*: ArrayPtr;
      export*: ExportDesc;
      term*: Kernel.Handler;
    END;
    PROCEDURE1CE* = PROCEDURE(VAR R: Files.Rider; M: Module);
    PROCEDURE1E2* = PROCEDURE(mod: Module; all: BOOLEAN);
    RECORD1CA = RECORD
      Load*: PROCEDURE1CE;
      Unlink*: PROCEDURE1E2;
    END;
    ARRAY208 = ARRAY OF CHAR;
    ARRAY221 = ARRAY OF CHAR;
    Command* = PROCEDURE();
    ARRAY244 = ARRAY OF CHAR;
    ARRAY28B = ARRAY OF CHAR;
    TerminationHandler* = Kernel.Handler;
    ExportPtr* = POINTER TO ExportDesc;

  VAR
    resMsgLen*: INTEGER;
    resMsg*: ARRAY4B;
    res*: INTEGER;
    modList*: Module;
    extended*: RECORD1CA;

  (* Forward PROCEDURE declarations *)

  PROCEDURE^ AllocCodeBlock*(VAR p: LONGINT; blocksize: LONGINT);
  PROCEDURE^ DeAllocCodeBlock*(p: LONGINT);
  PROCEDURE^ Free*(name: ARRAY28B; all: BOOLEAN);
  PROCEDURE^ InstallTermHandler*(h: Kernel.Handler);
  PROCEDURE^ ShrinkCodeBlock*(p: LONGINT; blocksize: LONGINT);
  PROCEDURE^ ThisCommand*(mod: Module; name: ARRAY244): Command;
  PROCEDURE^ ThisMod*(name: ARRAY221): Module;
  PROCEDURE^ thisMod*(name: ARRAY208; import: BOOLEAN): Module;

  PROCEDURE AllocCodeBlock*(VAR p: LONGINT; blocksize: LONGINT);

  END AllocCodeBlock;


  PROCEDURE DeAllocCodeBlock*(p: LONGINT);

  END DeAllocCodeBlock;


  PROCEDURE Free*(name: ARRAY28B; all: BOOLEAN);

  END Free;


  PROCEDURE InstallTermHandler*(h: Kernel.Handler);

  END InstallTermHandler;


  PROCEDURE ShrinkCodeBlock*(p: LONGINT; blocksize: LONGINT);

  END ShrinkCodeBlock;


  PROCEDURE ThisCommand*(mod: Module; name: ARRAY244): Command;

  END ThisCommand;


  PROCEDURE ThisMod*(name: ARRAY221): Module;

  END ThisMod;


  PROCEDURE thisMod*(name: ARRAY208; import: BOOLEAN): Module;

  END thisMod;


END Modules.
