(***************************************************************************

   Input File:   DISPLAY.OBJ
   Date/Time:    Wed Jan 13 14:18:47 2021
   -------------------------------------------------------

   Generated by Slim Binary(tm) Decoder Version 2.04

 ***************************************************************************)

MODULE Display;    (* x86 binary *)

  IMPORT
    Objects;

  CONST
    BG* = 0;
    FG* = 15;
    area* = 1;
    black* = 0;
    contents* = 2;
    display* = 0;
    drop* = 0;
    extend* = 1;
    full* = 0;
    get* = 0;
    integrate* = 1;
    invert* = 2;
    move* = 2;
    newprinter* = 3;
    paint* = 1;
    printer* = 1;
    reduce* = 0;
    remove* = 0;
    replace* = 0;
    reset* = 2;
    restore* = 2;
    screen* = 0;
    set* = 1;
    state* = 1;
    suspend* = 1;
    white* = 15;

  TYPE
    Frame* = POINTER TO FrameDesc;
    FrameDesc* = RECORD(Objects.ObjDesc)
      next*: Frame;
      dsc*: Frame;
      X*: INTEGER;
      Y*: INTEGER;
      W*: INTEGER;
      H*: INTEGER;
    END;
    FrameMsg* = RECORD(Objects.ObjMsg)
      F*: Frame;
      x*: INTEGER;
      y*: INTEGER;
      res*: INTEGER;
    END;
    MsgProc* = PROCEDURE(VAR M: FrameMsg);
    ARRAY25C = ARRAY OF SET;
    Pattern* = LONGINT;
    SelectMsg* = RECORD(FrameMsg)
      id*: INTEGER;
      time*: LONGINT;
      sel*: Frame;
      obj*: Objects.Object;
    END;
    ModifyMsg* = RECORD(FrameMsg)
      id*: INTEGER;
      mode*: INTEGER;
      dX*: INTEGER;
      dY*: INTEGER;
      dW*: INTEGER;
      dH*: INTEGER;
      X*: INTEGER;
      Y*: INTEGER;
      W*: INTEGER;
      H*: INTEGER;
    END;
    LocateMsg* = RECORD(FrameMsg)
      loc*: Frame;
      X*: INTEGER;
      Y*: INTEGER;
      u*: INTEGER;
      v*: INTEGER;
    END;
    DisplayMsg* = RECORD(FrameMsg)
      device*: INTEGER;
      id*: INTEGER;
      u*: INTEGER;
      v*: INTEGER;
      w*: INTEGER;
      h*: INTEGER;
    END;
    ControlMsg* = RECORD(FrameMsg)
      id*: INTEGER;
    END;
    ConsumeMsg* = RECORD(FrameMsg)
      id*: INTEGER;
      u*: INTEGER;
      v*: INTEGER;
      obj*: Objects.Object;
    END;

  VAR
    ticks*: LONGINT;
    star*: LONGINT;
    solid*: LONGINT;
    hook*: LONGINT;
    grey2*: LONGINT;
    grey1*: LONGINT;
    grey0*: LONGINT;
    downArrow*: LONGINT;
    cross*: LONGINT;
    arrow*: LONGINT;
    Width*: INTEGER;
    Unit*: LONGINT;
    UBottom*: INTEGER;
    Left*: INTEGER;
    Height*: INTEGER;
    ColLeft*: INTEGER;
    Broadcast*: MsgProc;
    Bottom*: INTEGER;

  (* Forward PROCEDURE declarations *)

  PROCEDURE^ AdjustClip*(X: INTEGER; Y: INTEGER; W: INTEGER; H: INTEGER);
  PROCEDURE^ CopyBlock*(sx: INTEGER; sy: INTEGER; w: INTEGER; h: INTEGER; dx: INTEGER; dy: INTEGER; mode: INTEGER);
  PROCEDURE^ CopyPattern*(col: INTEGER; pat: LONGINT; x: INTEGER; y: INTEGER; mode: INTEGER);
  PROCEDURE^ Depth*(X: INTEGER): INTEGER;
  PROCEDURE^ Dot*(col: INTEGER; x: INTEGER; y: INTEGER; mode: INTEGER);
  PROCEDURE^ FillPattern*(col: INTEGER; pat: LONGINT; pX: INTEGER; pY: INTEGER; x: INTEGER; y: INTEGER; w: INTEGER; h: INTEGER; mode: INTEGER);
  PROCEDURE^ GetClip*(VAR X: INTEGER; VAR Y: INTEGER; VAR W: INTEGER; VAR H: INTEGER);
  PROCEDURE^ GetColor*(col: INTEGER; VAR red: INTEGER; VAR green: INTEGER; VAR blue: INTEGER);
  PROCEDURE^ GetDim*(pat: LONGINT; VAR W: INTEGER; VAR H: INTEGER);
  PROCEDURE^ Map*(X: INTEGER): LONGINT;
  PROCEDURE^ NewPattern*(w: INTEGER; h: INTEGER; VAR image: ARRAY25C): LONGINT;
  PROCEDURE^ ReplConst*(col: INTEGER; x: INTEGER; y: INTEGER; w: INTEGER; h: INTEGER; mode: INTEGER);
  PROCEDURE^ ReplPattern*(col: INTEGER; pat: LONGINT; X: INTEGER; Y: INTEGER; W: INTEGER; H: INTEGER; mode: INTEGER);
  PROCEDURE^ ResetClip*();
  PROCEDURE^ SetClip*(X: INTEGER; Y: INTEGER; W: INTEGER; H: INTEGER);
  PROCEDURE^ SetColor*(col: INTEGER; red: INTEGER; green: INTEGER; blue: INTEGER);

  PROCEDURE AdjustClip*(X: INTEGER; Y: INTEGER; W: INTEGER; H: INTEGER);

  END AdjustClip;


  PROCEDURE CopyBlock*(sx: INTEGER; sy: INTEGER; w: INTEGER; h: INTEGER; dx: INTEGER; dy: INTEGER; mode: INTEGER);

  END CopyBlock;


  PROCEDURE CopyPattern*(col: INTEGER; pat: LONGINT; x: INTEGER; y: INTEGER; mode: INTEGER);

  END CopyPattern;


  PROCEDURE Depth*(X: INTEGER): INTEGER;

  END Depth;


  PROCEDURE Dot*(col: INTEGER; x: INTEGER; y: INTEGER; mode: INTEGER);

  END Dot;


  PROCEDURE FillPattern*(col: INTEGER; pat: LONGINT; pX: INTEGER; pY: INTEGER; x: INTEGER; y: INTEGER; w: INTEGER; h: INTEGER; mode: INTEGER);

  END FillPattern;


  PROCEDURE GetClip*(VAR X: INTEGER; VAR Y: INTEGER; VAR W: INTEGER; VAR H: INTEGER);

  END GetClip;


  PROCEDURE GetColor*(col: INTEGER; VAR red: INTEGER; VAR green: INTEGER; VAR blue: INTEGER);

  END GetColor;


  PROCEDURE GetDim*(pat: LONGINT; VAR W: INTEGER; VAR H: INTEGER);

  END GetDim;


  PROCEDURE Map*(X: INTEGER): LONGINT;

  END Map;


  PROCEDURE NewPattern*(w: INTEGER; h: INTEGER; VAR image: ARRAY25C): LONGINT;

  END NewPattern;


  PROCEDURE ReplConst*(col: INTEGER; x: INTEGER; y: INTEGER; w: INTEGER; h: INTEGER; mode: INTEGER);

  END ReplConst;


  PROCEDURE ReplPattern*(col: INTEGER; pat: LONGINT; X: INTEGER; Y: INTEGER; W: INTEGER; H: INTEGER; mode: INTEGER);

  END ReplPattern;


  PROCEDURE ResetClip*();

  END ResetClip;


  PROCEDURE SetClip*(X: INTEGER; Y: INTEGER; W: INTEGER; H: INTEGER);

  END SetClip;


  PROCEDURE SetColor*(col: INTEGER; red: INTEGER; green: INTEGER; blue: INTEGER);

  END SetColor;


END Display.
